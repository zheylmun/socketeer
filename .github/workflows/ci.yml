name: "Test Suite"
on:
  push:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Setup Rust Toolchain"
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: "Run Tests"
        run: cargo test --all-features --doc

  # Check formatting with rustfmt
  formatting:
    name: Check Formatting
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v4
      # Ensure rustfmt is installed and setup problem matcher
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - name: Rustfmt Check
        uses: actions-rust-lang/rustfmt@v1

  # Check for clippy warnings
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo clippy --all-features --tests --benches -- -Dclippy::all -Dclippy::pedantic

  # Upload coverage to Codecov
  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Setup Rust Toolchain"
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: "Install cargo-llvm-cov"
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov
      - name: "Generate code coverage"
        run: cargo llvm-cov --lcov --output-path lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          slug: zheylmun/socketeer
  semver-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 6
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check semver
        uses: obi1kenobi/cargo-semver-checks-action@v2
